services:
  bot:
    build:
      context: .
      target: builder
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - NODE_ENV=development
      - MINECRAFT_HOST=${MINECRAFT_HOST:-localhost}
      - MINECRAFT_PORT=${MINECRAFT_PORT:-25565}
      - MINECRAFT_USERNAME=${MINECRAFT_USERNAME:-bot}
      - OLLAMA_HOST=http://ollama:11434
      - DEBUG=*
    command: npm run dev
    ports:
      - "3000:3000"
      - "9229:9229" # Node.js debug port
    depends_on:
      ollama:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/health",
        ]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    restart: unless-stopped
    networks:
      - bot-network

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/version"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    restart: unless-stopped
    networks:
      - bot-network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    networks:
      - bot-network

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - bot-network

volumes:
  ollama_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  bot-network:
    driver: bridge
